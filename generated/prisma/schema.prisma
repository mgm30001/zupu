generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  members   Member[]
}

model Member {
  id                String         @id @default(cuid())
  name              String
  gender            Gender
  birthDate         DateTime?
  deathDate         DateTime?
  photo             String?
  biography         String?
  contactInfo       Json?
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  creatorId         String
  creator           User           @relation(fields: [creatorId], references: [id])
  events            Event[]
  childRelations    Relationship[] @relation("ParentChild_Child")
  parentRelations   Relationship[] @relation("ParentChild_Parent")
  siblingAsSibling1 Relationship[] @relation("Sibling1")
  siblingAsSibling2 Relationship[] @relation("Sibling2")
  spouseAsSpouse1   Relationship[] @relation("Spouse1")
  spouseAsSpouse2   Relationship[] @relation("Spouse2")
}

model Relationship {
  id         String       @id @default(cuid())
  type       RelationType
  startDate  DateTime?
  endDate    DateTime?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  parentId   String?
  childId    String?
  spouse1Id  String?
  spouse2Id  String?
  sibling1Id String?
  sibling2Id String?
  child      Member?      @relation("ParentChild_Child", fields: [childId], references: [id])
  parent     Member?      @relation("ParentChild_Parent", fields: [parentId], references: [id])
  sibling1   Member?      @relation("Sibling1", fields: [sibling1Id], references: [id])
  sibling2   Member?      @relation("Sibling2", fields: [sibling2Id], references: [id])
  spouse1    Member?      @relation("Spouse1", fields: [spouse1Id], references: [id])
  spouse2    Member?      @relation("Spouse2", fields: [spouse2Id], references: [id])
}

model Event {
  id          String   @id @default(cuid())
  title       String
  description String
  date        DateTime
  location    String?
  eventType   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  memberId    String
  member      Member   @relation(fields: [memberId], references: [id])
}

enum UserRole {
  ADMIN
  USER
  GUEST
  EDITOR
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum RelationType {
  PARENT_CHILD
  SPOUSE
  SIBLING
}
